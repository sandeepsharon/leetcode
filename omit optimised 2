void swap(int*, int*); // swap declaration
int omit(int*, int, int); // omit declaration
int main() {
    int num[] = {4,4,8,4,6,4,4,1,2,4,5,5,4};
    int k = 4;
    int length = sizeof(num)/sizeof(num[0]);
    int index = omit(num, k, length);
    std::cout << index <<std::endl;
    //Print Array
    for (int i=0;i<length;i++) {
        std::cout << num[i];
    }
}
//omit definition
int omit(int *num, int k, int length){
    int i=0, j=0;
    bool isFind = false;
    while(j<length) {
        if(num[j]==k) {
            if(!isFind) {
                i=j;
                isFind = true;
            }
        }
        else {
            if(isFind) {
             swap(num+i, num+j);
             i++;
            }
            
        }
        j++;
    }
    return i;
}
//swap definition
void swap(int *start, int *end) {
    int temp = *start;
    *start = *end;
    *end = temp;
}
